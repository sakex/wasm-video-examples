{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport { UserList } from \"@components/userList\";\nimport Poker from \"@components/poker.jsx\";\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      conId: -1,\n      members: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"socket\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"streaming\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"candidates\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"peer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"callRemote\", function _callee(user) {\n      var offer;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.streaming.set_on_ice_candidate(function (candidate) {\n                _this.socket.emit(\"candidate\", {\n                  candidate: candidate,\n                  id: user\n                });\n              });\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(_this.streaming.create_offer().get_offer());\n\n            case 3:\n              offer = _context.sent;\n\n              _this.socket.emit(\"call\", {\n                id: user,\n                selfId: _this.state.conId,\n                data: JSON.stringify(offer)\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _await$import, Streaming, init_panic_hook;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(import(\"@video-stream\"));\n\n            case 2:\n              _await$import = _context4.sent;\n              Streaming = _await$import.Streaming;\n              init_panic_hook = _await$import.init_panic_hook;\n              init_panic_hook();\n              Index.Streaming = Streaming;\n              this.streaming = new Index.Streaming(document.querySelector(\"#firstVideo\"));\n              this.peer = this.streaming.get_peer();\n              Reflect.set(window, \"peer\", this.peer);\n              this.socket = io();\n              this.socket.on(\"candidate\", function (_ref) {\n                var id = _ref.id,\n                    candidate = _ref.candidate;\n\n                _this2.candidates.push(candidate);\n\n                _this2.streaming.add_ice_candidate(candidate);\n              });\n              this.socket.on(\"connectionId\", function (conId) {\n                return _this2.setState({\n                  conId: conId\n                });\n              });\n              this.socket.on(\"members\", function (members) {\n                return _this2.setState({\n                  members: members\n                });\n              });\n              this.socket.on(\"call\", function _callee2(_ref2) {\n                var id, selfId, data, offer, answer;\n                return _regeneratorRuntime.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        id = _ref2.id, selfId = _ref2.selfId, data = _ref2.data;\n                        offer = JSON.parse(data);\n\n                        _this2.streaming.set_on_ice_candidate(function (candidate) {\n                          _this2.socket.emit(\"candidate\", {\n                            candidate: candidate,\n                            id: selfId\n                          });\n                        });\n\n                        _context2.next = 5;\n                        return _regeneratorRuntime.awrap(_this2.streaming.accept_offer(offer).get_offer());\n\n                      case 5:\n                        answer = _context2.sent;\n\n                        _this2.socket.emit(\"answer\", {\n                          id: selfId,\n                          selfId: _this2.state.conId,\n                          data: JSON.stringify(answer)\n                        });\n\n                        _this2.candidates.forEach(function (c) {\n                          return _this2.streaming.add_ice_candidate(c);\n                        });\n\n                        console.log(_this2.candidates);\n                        _context2.next = 11;\n                        return _regeneratorRuntime.awrap(_this2.streaming.load_video());\n\n                      case 11:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n              this.socket.on(\"answer\", function _callee3(_ref3) {\n                var id, selfId, data, offer;\n                return _regeneratorRuntime.async(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        id = _ref3.id, selfId = _ref3.selfId, data = _ref3.data;\n                        offer = JSON.parse(data);\n                        _context3.next = 4;\n                        return _regeneratorRuntime.awrap(_this2.streaming.accept_answer(offer).get_offer());\n\n                      case 4:\n                        _context3.next = 6;\n                        return _regeneratorRuntime.awrap(_this2.streaming.load_video());\n\n                      case 6:\n                        _this2.candidates.forEach(function (c) {\n                          return _this2.streaming.add_ice_candidate(c);\n                        });\n\n                        console.log(_this2.candidates);\n\n                      case 8:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, this.state.conId != -1 && __jsx(Poker, {\n        socket: this.socket\n      }), __jsx(\"div\", {\n        id: \"firstVideo\"\n      }), __jsx(UserList, _extends({\n        callRemote: this.callRemote\n      }, this.state)));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\n_defineProperty(Index, \"Streaming\", void 0);\n\nexport { Index as default };","map":{"version":3,"sources":["/home/olivier/web_conf/wasm-video-examples/pages/index.tsx"],"names":["React","Component","io","UserList","Poker","Index","conId","members","user","streaming","set_on_ice_candidate","candidate","socket","emit","id","create_offer","get_offer","offer","selfId","state","data","JSON","stringify","Streaming","init_panic_hook","document","querySelector","peer","get_peer","Reflect","set","window","on","candidates","push","add_ice_candidate","setState","parse","accept_offer","answer","forEach","c","console","log","load_video","accept_answer","callRemote"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport io from 'socket.io-client';\nimport {UserList} from \"@components/userList\";\nimport Poker from \"@components/poker.jsx\";\n\ninterface State {\n    conId: number,\n    members: number[]\n}\n\ninterface CallParams {\n    id: number,\n    selfId: number,\n    data: string\n}\n\nexport default class Index extends Component<{}, State> {\n    public state: State = {conId: -1, members: []};\n    private socket;\n    private streaming;\n    static Streaming;\n    private candidates = [];\n    private peer;\n\n    async componentDidMount() {\n        const {Streaming, init_panic_hook} = await import(\"@video-stream\");\n        init_panic_hook();\n        Index.Streaming = Streaming;\n        this.streaming = new Index.Streaming(document.querySelector(\"#firstVideo\"));\n        this.peer = this.streaming.get_peer();\n        Reflect.set(window, \"peer\", this.peer);\n        this.socket = io();\n        this.socket.on(\"candidate\", ({id, candidate}) => {\n            this.candidates.push(candidate);\n            this.streaming.add_ice_candidate(candidate);\n        });\n        this.socket.on(\"connectionId\", (conId: number) => this.setState({conId}));\n        this.socket.on(\"members\", (members: number[]) => this.setState({members}));\n        this.socket.on(\"call\", async ({id, selfId, data}: CallParams) => {\n            const offer = JSON.parse(data);\n            this.streaming.set_on_ice_candidate((candidate) => {\n                this.socket.emit(\"candidate\", {candidate: candidate, id: selfId});\n            });\n            const answer = await this.streaming.accept_offer(offer).get_offer();\n            this.socket.emit(\"answer\", ({id: selfId, selfId: this.state.conId, data: JSON.stringify(answer)}));\n            this.candidates.forEach(c => this.streaming.add_ice_candidate(c));\n            console.log(this.candidates);\n            await this.streaming.load_video();\n        });\n        this.socket.on(\"answer\", async ({id, selfId, data}: CallParams) => {\n            const offer = JSON.parse(data);\n            await this.streaming.accept_answer(offer).get_offer();\n            await this.streaming.load_video();\n            this.candidates.forEach(c => this.streaming.add_ice_candidate(c));\n            console.log(this.candidates);\n        });\n    }\n\n\n    callRemote = async (user: number) => {\n        this.streaming.set_on_ice_candidate((candidate) => {\n            this.socket.emit(\"candidate\", {candidate: candidate, id: user});\n        });\n        const offer = await this.streaming.create_offer().get_offer();\n        this.socket.emit(\"call\", ({id: user, selfId: this.state.conId, data: JSON.stringify(offer)}));\n    };\n\n    render() {\n        return (\n            <>\n                {this.state.conId != -1 && <Poker socket={this.socket} />}\n                <div id=\"firstVideo\"/>\n                <UserList callRemote={this.callRemote} {...this.state}/>\n            </>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}