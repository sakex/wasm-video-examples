{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport { UserList } from \"@components/userList\";\nimport Poker from \"@components/poker.jsx\";\nexport default class Index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      conId: -1,\n      members: []\n    });\n\n    _defineProperty(this, \"socket\", void 0);\n\n    _defineProperty(this, \"streaming\", void 0);\n\n    _defineProperty(this, \"candidates\", []);\n\n    _defineProperty(this, \"peer\", void 0);\n\n    _defineProperty(this, \"callRemote\", async user => {\n      this.streaming.set_on_ice_candidate(candidate => {\n        this.socket.emit(\"candidate\", {\n          candidate: candidate,\n          id: user\n        });\n      });\n      const offer = await this.streaming.create_offer().get_offer();\n      this.socket.emit(\"call\", {\n        id: user,\n        selfId: this.state.conId,\n        data: JSON.stringify(offer)\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const {\n      Streaming,\n      init_panic_hook\n    } = await import(\"@video-stream\");\n    init_panic_hook();\n    Index.Streaming = Streaming;\n    this.streaming = new Index.Streaming(document.querySelector(\"#firstVideo\"));\n    this.peer = this.streaming.get_peer();\n    Reflect.set(window, \"peer\", this.peer);\n    this.socket = io();\n    this.socket.on(\"candidate\", ({\n      id,\n      candidate\n    }) => {\n      this.candidates.push(candidate);\n      this.streaming.add_ice_candidate(candidate);\n    });\n    this.socket.on(\"connectionId\", conId => this.setState({\n      conId\n    }));\n    this.socket.on(\"members\", members => this.setState({\n      members\n    }));\n    this.socket.on(\"call\", async ({\n      id,\n      selfId,\n      data\n    }) => {\n      const offer = JSON.parse(data);\n      this.streaming.set_on_ice_candidate(candidate => {\n        this.socket.emit(\"candidate\", {\n          candidate: candidate,\n          id: selfId\n        });\n      });\n      const answer = await this.streaming.accept_offer(offer).get_offer();\n      this.socket.emit(\"answer\", {\n        id: selfId,\n        selfId: this.state.conId,\n        data: JSON.stringify(answer)\n      });\n      this.candidates.forEach(c => this.streaming.add_ice_candidate(c));\n      console.log(this.candidates);\n      await this.streaming.load_video();\n    });\n    this.socket.on(\"answer\", async ({\n      id,\n      selfId,\n      data\n    }) => {\n      const offer = JSON.parse(data);\n      await this.streaming.accept_answer(offer).get_offer();\n      await this.streaming.load_video();\n      this.candidates.forEach(c => this.streaming.add_ice_candidate(c));\n      console.log(this.candidates);\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, this.state.conId != -1 && __jsx(Poker, {\n      socket: this.socket\n    }), __jsx(\"div\", {\n      id: \"firstVideo\"\n    }), __jsx(UserList, _extends({\n      callRemote: this.callRemote\n    }, this.state)));\n  }\n\n}\n\n_defineProperty(Index, \"Streaming\", void 0);","map":{"version":3,"sources":["/home/olivier/web_conf/wasm-video-examples/pages/index.tsx"],"names":["React","Component","io","UserList","Poker","Index","conId","members","user","streaming","set_on_ice_candidate","candidate","socket","emit","id","offer","create_offer","get_offer","selfId","state","data","JSON","stringify","componentDidMount","Streaming","init_panic_hook","document","querySelector","peer","get_peer","Reflect","set","window","on","candidates","push","add_ice_candidate","setState","parse","answer","accept_offer","forEach","c","console","log","load_video","accept_answer","render","callRemote"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAaA,eAAe,MAAMC,KAAN,SAAoBJ,SAApB,CAAyC;AAAA;AAAA;;AAAA,mCAC9B;AAACK,MAAAA,KAAK,EAAE,CAAC,CAAT;AAAYC,MAAAA,OAAO,EAAE;AAArB,KAD8B;;AAAA;;AAAA;;AAAA,wCAK/B,EAL+B;;AAAA;;AAAA,wCA2CvC,MAAOC,IAAP,IAAwB;AACjC,WAAKC,SAAL,CAAeC,oBAAf,CAAqCC,SAAD,IAAe;AAC/C,aAAKC,MAAL,CAAYC,IAAZ,CAAiB,WAAjB,EAA8B;AAACF,UAAAA,SAAS,EAAEA,SAAZ;AAAuBG,UAAAA,EAAE,EAAEN;AAA3B,SAA9B;AACH,OAFD;AAGA,YAAMO,KAAK,GAAG,MAAM,KAAKN,SAAL,CAAeO,YAAf,GAA8BC,SAA9B,EAApB;AACA,WAAKL,MAAL,CAAYC,IAAZ,CAAiB,MAAjB,EAA0B;AAACC,QAAAA,EAAE,EAAEN,IAAL;AAAWU,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWb,KAA9B;AAAqCc,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,KAAf;AAA3C,OAA1B;AACH,KAjDmD;AAAA;;AAQpD,QAAMQ,iBAAN,GAA0B;AACtB,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAA+B,MAAM,OAAO,eAAP,CAA3C;AACAA,IAAAA,eAAe;AACfpB,IAAAA,KAAK,CAACmB,SAAN,GAAkBA,SAAlB;AACA,SAAKf,SAAL,GAAiB,IAAIJ,KAAK,CAACmB,SAAV,CAAoBE,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAApB,CAAjB;AACA,SAAKC,IAAL,GAAY,KAAKnB,SAAL,CAAeoB,QAAf,EAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAAoB,MAApB,EAA4B,KAAKJ,IAAjC;AACA,SAAKhB,MAAL,GAAcV,EAAE,EAAhB;AACA,SAAKU,MAAL,CAAYqB,EAAZ,CAAe,WAAf,EAA4B,CAAC;AAACnB,MAAAA,EAAD;AAAKH,MAAAA;AAAL,KAAD,KAAqB;AAC7C,WAAKuB,UAAL,CAAgBC,IAAhB,CAAqBxB,SAArB;AACA,WAAKF,SAAL,CAAe2B,iBAAf,CAAiCzB,SAAjC;AACH,KAHD;AAIA,SAAKC,MAAL,CAAYqB,EAAZ,CAAe,cAAf,EAAgC3B,KAAD,IAAmB,KAAK+B,QAAL,CAAc;AAAC/B,MAAAA;AAAD,KAAd,CAAlD;AACA,SAAKM,MAAL,CAAYqB,EAAZ,CAAe,SAAf,EAA2B1B,OAAD,IAAuB,KAAK8B,QAAL,CAAc;AAAC9B,MAAAA;AAAD,KAAd,CAAjD;AACA,SAAKK,MAAL,CAAYqB,EAAZ,CAAe,MAAf,EAAuB,OAAO;AAACnB,MAAAA,EAAD;AAAKI,MAAAA,MAAL;AAAaE,MAAAA;AAAb,KAAP,KAA0C;AAC7D,YAAML,KAAK,GAAGM,IAAI,CAACiB,KAAL,CAAWlB,IAAX,CAAd;AACA,WAAKX,SAAL,CAAeC,oBAAf,CAAqCC,SAAD,IAAe;AAC/C,aAAKC,MAAL,CAAYC,IAAZ,CAAiB,WAAjB,EAA8B;AAACF,UAAAA,SAAS,EAAEA,SAAZ;AAAuBG,UAAAA,EAAE,EAAEI;AAA3B,SAA9B;AACH,OAFD;AAGA,YAAMqB,MAAM,GAAG,MAAM,KAAK9B,SAAL,CAAe+B,YAAf,CAA4BzB,KAA5B,EAAmCE,SAAnC,EAArB;AACA,WAAKL,MAAL,CAAYC,IAAZ,CAAiB,QAAjB,EAA4B;AAACC,QAAAA,EAAE,EAAEI,MAAL;AAAaA,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWb,KAAhC;AAAuCc,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeiB,MAAf;AAA7C,OAA5B;AACA,WAAKL,UAAL,CAAgBO,OAAhB,CAAwBC,CAAC,IAAI,KAAKjC,SAAL,CAAe2B,iBAAf,CAAiCM,CAAjC,CAA7B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,UAAjB;AACA,YAAM,KAAKzB,SAAL,CAAeoC,UAAf,EAAN;AACH,KAVD;AAWA,SAAKjC,MAAL,CAAYqB,EAAZ,CAAe,QAAf,EAAyB,OAAO;AAACnB,MAAAA,EAAD;AAAKI,MAAAA,MAAL;AAAaE,MAAAA;AAAb,KAAP,KAA0C;AAC/D,YAAML,KAAK,GAAGM,IAAI,CAACiB,KAAL,CAAWlB,IAAX,CAAd;AACA,YAAM,KAAKX,SAAL,CAAeqC,aAAf,CAA6B/B,KAA7B,EAAoCE,SAApC,EAAN;AACA,YAAM,KAAKR,SAAL,CAAeoC,UAAf,EAAN;AACA,WAAKX,UAAL,CAAgBO,OAAhB,CAAwBC,CAAC,IAAI,KAAKjC,SAAL,CAAe2B,iBAAf,CAAiCM,CAAjC,CAA7B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,UAAjB;AACH,KAND;AAOH;;AAWDa,EAAAA,MAAM,GAAG;AACL,WACI,4BACK,KAAK5B,KAAL,CAAWb,KAAX,IAAoB,CAAC,CAArB,IAA0B,MAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKM;AAApB,MAD/B,EAEI;AAAK,MAAA,EAAE,EAAC;AAAR,MAFJ,EAGI,MAAC,QAAD;AAAU,MAAA,UAAU,EAAE,KAAKoC;AAA3B,OAA2C,KAAK7B,KAAhD,EAHJ,CADJ;AAOH;;AA3DmD;;gBAAnCd,K","sourcesContent":["import React, {Component} from 'react';\nimport io from 'socket.io-client';\nimport {UserList} from \"@components/userList\";\nimport Poker from \"@components/poker.jsx\";\n\ninterface State {\n    conId: number,\n    members: number[]\n}\n\ninterface CallParams {\n    id: number,\n    selfId: number,\n    data: string\n}\n\nexport default class Index extends Component<{}, State> {\n    public state: State = {conId: -1, members: []};\n    private socket;\n    private streaming;\n    static Streaming;\n    private candidates = [];\n    private peer;\n\n    async componentDidMount() {\n        const {Streaming, init_panic_hook} = await import(\"@video-stream\");\n        init_panic_hook();\n        Index.Streaming = Streaming;\n        this.streaming = new Index.Streaming(document.querySelector(\"#firstVideo\"));\n        this.peer = this.streaming.get_peer();\n        Reflect.set(window, \"peer\", this.peer);\n        this.socket = io();\n        this.socket.on(\"candidate\", ({id, candidate}) => {\n            this.candidates.push(candidate);\n            this.streaming.add_ice_candidate(candidate);\n        });\n        this.socket.on(\"connectionId\", (conId: number) => this.setState({conId}));\n        this.socket.on(\"members\", (members: number[]) => this.setState({members}));\n        this.socket.on(\"call\", async ({id, selfId, data}: CallParams) => {\n            const offer = JSON.parse(data);\n            this.streaming.set_on_ice_candidate((candidate) => {\n                this.socket.emit(\"candidate\", {candidate: candidate, id: selfId});\n            });\n            const answer = await this.streaming.accept_offer(offer).get_offer();\n            this.socket.emit(\"answer\", ({id: selfId, selfId: this.state.conId, data: JSON.stringify(answer)}));\n            this.candidates.forEach(c => this.streaming.add_ice_candidate(c));\n            console.log(this.candidates);\n            await this.streaming.load_video();\n        });\n        this.socket.on(\"answer\", async ({id, selfId, data}: CallParams) => {\n            const offer = JSON.parse(data);\n            await this.streaming.accept_answer(offer).get_offer();\n            await this.streaming.load_video();\n            this.candidates.forEach(c => this.streaming.add_ice_candidate(c));\n            console.log(this.candidates);\n        });\n    }\n\n\n    callRemote = async (user: number) => {\n        this.streaming.set_on_ice_candidate((candidate) => {\n            this.socket.emit(\"candidate\", {candidate: candidate, id: user});\n        });\n        const offer = await this.streaming.create_offer().get_offer();\n        this.socket.emit(\"call\", ({id: user, selfId: this.state.conId, data: JSON.stringify(offer)}));\n    };\n\n    render() {\n        return (\n            <>\n                {this.state.conId != -1 && <Poker socket={this.socket} />}\n                <div id=\"firstVideo\"/>\n                <UserList callRemote={this.callRemote} {...this.state}/>\n            </>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}